stages:
  - build-image
  - check

variables:
  ELECTRON_CACHE: "$CI_PROJECT_DIR/.cache/electron"
  YARN_CACHE_FOLDER: "$CI_PROJECT_DIR/.cache/yarn"

# we can't use ggcr.io due to an invalid / wrong TLS certificate
# we can't use ghcr.io due to not being on the whitelist
# => some obscure image from dockerhub with both python and node installed ðŸ¤¬
image: combos/python_node:3.11_20

default:
  interruptible: true
  before_script:
    - corepack enable yarn
    - yarn install --immutable

build-ci-image:
  image: docker:cli
  stage: build-image
  services:
    - docker:dind
  rules:
    - when: never # disabled as gitgud does not support dind
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
      changes:
        - .gitlab/Dockerfile
      variables:
        IMAGE_TAG: latest
    - if: $CI_PIPELINE_SOURCE == "push"
      variables:
        IMAGE_TAG: $CI_COMMIT_REF_SLUG-snapshot
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE/ci-linux:$IMAGE_TAG
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .gitlab
    - docker push "$DOCKER_IMAGE_NAME"

build:
  stage: check
  script:
    - yarn compile:check
    - yarn forge:package

test:
  stage: check
  script:
    - yarn format:check
    - yarn lint
    - yarn test
